version: "4"
services:
  tempo:
    image: grafana/tempo:2.2.2
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3110:3100"  # Tempo as grafana data source
      #- "9411:9411" # zipkin
      - "4317:4317" #otlp grpc
    networks:
      - microview 

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "4316:4317" # OTLP gRPC receiver
    depends_on:
      - loki
    networks:
      - microview 

  loki:
    image: grafana/loki:main
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    networks:
      - microview 

  prometheus:
    image: prom/prometheus:v2.46.0
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - microview 

  grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    networks:
      - microview 

  msa:
    image: microservicea:4
    environment:
      - KAFKA_URL=zookeeper_kafka-kafka-1:29092
      - POSTGRES_URL=postgres-postgres-1:5432
      - PORT=8080
    ports:
      - "8080:8080" 
    networks:
      - microview  
  msb:
    image: microserviceb:1
    environment:
      - KAFKA_URL=zookeeper_kafka-kafka-1:29092
      - POSTGRES_URL=postgres-postgres-1:5432
      - SERVICEA_URL=microview-v3-msa-1:8080
      - KAFKA_GROUP_ID=group_id_MS_B
      - PORT=8081
    ports:
      - "8081:8081" 
    networks:
      - microview  
  msc:
    image: microservicec:1
    environment:
      - KAFKA_URL=zookeeper_kafka-kafka-1:29092
      - POSTGRES_URL=postgres-postgres-1:5432
      - KAFKA_GROUP_ID=group_id_MS_C
      - SERVICEB_URL=microview-v3-msb-1:8081
      - PORT=8082
    ports:
      - "8082:8082" 
    networks:
      - microview  

networks:
  microview:
    name: microview